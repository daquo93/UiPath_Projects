<Activity mc:Ignorable="sap sap2010" x:Class="Json2Dictionary" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ResultDictionary" Type="InArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, x:Object)[]))" />
    <x:Property Name="io_OutputDictionary" Type="InOutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>827.333333333333,2512</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Core</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Text.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="The following workflow converts the Json file into a Dictionary of Sting, String like required in the Assignment" DisplayName="Json2Dictionary Main Sequence" sap:VirtualizedContainerService.HintSize="837.333333333333,2447.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_12">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch - Json2Dictionary " sap:VirtualizedContainerService.HintSize="795.333333333333,2324.66666666667" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Sequence DisplayName="Json2Dictionary" sap:VirtualizedContainerService.HintSize="756.666666666667,2086.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="Name" />
            <Variable x:TypeArguments="x:String" Name="prefix" />
            <Variable x:TypeArguments="x:String" Name="Value" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="714.666666666667,1994.66666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[in_ResultDictionary.Keys]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="key_primary" />
                </ActivityAction.Argument>
                <ui:ForEach x:TypeArguments="scg:Dictionary(x:String, x:Object)" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="678,1866.66666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[in_ResultDictionary(key_primary)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="inner_dictionary" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Inned Dictionary Sequence" sap:VirtualizedContainerService.HintSize="641.333333333333,1738.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign Name " sap:VirtualizedContainerService.HintSize="599.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Name]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign Value" sap:VirtualizedContainerService.HintSize="599.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Value]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="599.333333333333,1442.66666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[inner_dictionary.Keys]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="key" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Assigning Values to Ouput Dictionary Sequence" sap:VirtualizedContainerService.HintSize="562.666666666667,1314.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="subDictionary" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[key]" sap:VirtualizedContainerService.HintSize="520.666666666667,192" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign x:Key="Name" DisplayName="Assign key name" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Name]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[inner_dictionary(key).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign x:Key="Value" DisplayName="Assign value name" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Value]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[inner_dictionary(key).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign x:Key="Key" DisplayName="Assign prefix" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[prefix]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[inner_dictionary(key).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Switch>
                                <If Condition="[not String.IsNullOrEmpty(Name) and not String.IsNullOrEmpty(Value)]" DisplayName="If Name and Value both exists" sap:VirtualizedContainerService.HintSize="520.666666666667,256.666666666667" sap2010:WorkflowViewState.IdRef="If_3">
                                  <If.Then>
                                    <Assign DisplayName="Assign Key and Value to Out Dic" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_9">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[io_OutputDictionary(Name)]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Value.ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                </If>
                                <If Condition="[key_primary =&quot;Sheets&quot; and not( key = &quot;Key&quot;)]" DisplayName="If key primary is Sheets" sap:VirtualizedContainerService.HintSize="520.666666666667,694" sap2010:WorkflowViewState.IdRef="If_1">
                                  <If.Then>
                                    <If Condition="[not string.IsNullOrEmpty(prefix)]" DisplayName="If prefix exists" sap:VirtualizedContainerService.HintSize="484,499.333333333333" sap2010:WorkflowViewState.IdRef="If_2">
                                      <If.Then>
                                        <TryCatch DisplayName="Try Catch - Deserialize Json" sap:VirtualizedContainerService.HintSize="434,304.666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                          <TryCatch.Try>
                                            <Sequence DisplayName="Sequence - Deserialize inner Json" sap:VirtualizedContainerService.HintSize="476,380.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:DeserializeJson x:TypeArguments="scg:Dictionary(x:String, x:String)" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,58.6666666666667" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[subDictionary]" JsonString="[inner_dictionary(key).ToString]" />
                                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,190" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[subDictionary.Keys]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="x:String">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:String" Name="inner_key" />
                                                    </ActivityAction.Argument>
                                                    <Assign DisplayName="Assign value to output dictionary " sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[io_OutputDictionary(prefix+"."+key+"."+inner_key.toString)]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[subDictionary(inner_key).ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                              </ui:ForEach>
                                            </Sequence>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,132.666666666667" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                </ActivityAction.Argument>
                                                <Assign DisplayName="Assign key value to output Dictionary" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[io_OutputDictionary(prefix+"."+key.toString)]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[inner_dictionary(key).ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="761.333333333333,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>